name: Bump version
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      - name: "Get Previous tag"
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 2.0.2 # Optional fallback tag to use when no tag can be found
      - name: "Get next patch version"
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: "Create new milestone"
        id: createmilestone
        uses: "WyriHaximus/github-action-create-milestone@v1"
        with:
          title: ${{ steps.semvers.outputs.patch }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: "Get version"
        id: vars
        run: echo ::set-output name=version::$(cat VERSION)
      - name: "Test output"
        run: echo ${{ steps.vars.outputs.version }}

  write-version:
    runs-on: ubuntu-latest
    name: Write Version to File
    steps:
      - uses: actions/checkout@master
      - name: Update version
        uses: brettdorrans/write-version-to-file@master
        with:
          filename: "./latest_version.VERSION"
          placeholder: "${{ generate.steps.previoustag }}"

  write-version2:
    runs-on: ubuntu-latest
    name: Write Version to File 2
    steps:
      - uses: actions/checkout@master
      - name: Update version 2
        uses: brettdorrans/write-version-to-file@master
        with:
          filename: "./latest_version.txt"
          placeholder: "${VERSION}"
